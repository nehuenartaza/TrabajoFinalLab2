semana 1 (7/11 - 12/11) -------------------------------------------

nehuen:
- creó el header Constantes.h y creó ahí mismo las dimensiones DIM1, DIM2 y DIM3
- creó las librerías arboles y listasDobles

Julián:
-Creo la estructura del mazo(pila), y la funcion apilar(),mazoVacio(), desapilar(), mostrar() y mostrarTope()
-Creo la estructura para la lista simple de cartas con la que se va a cargar el mazo, con la funcion borrarPrimero(),
agregarAlprincipio() y crearNodo()

nehuen:
- Creó las funciones:
stListaD * romperEnlaces(stListaD *) | setea el siguiente y anterior de un nodo en NULL y lo retorna
stListaD * agregarInicioColeccion(stListaD *, stListaD *)
stListaD * agregarFinalColeccion(stListaD *, stListaD *)
stListaD * agregarPorIDColeccion(stListaD *, stListaD *) | agrega ordenado por ID menor a mayor
stListaD * retornarUltimaCarta(stListaD *)
void mostrarListaDoble(stListaD *) | recorre la colección y muestra las cartas

semana 2 (13/11 - 19/11) ------------------------------------------
nehuen:
- Creó las funciones:
void buscarCartasPorStringAproximado(stListaD *, char[]) | muestra todas las cartas cuyo nombre tenga el string del argumento 2
stListaD * eliminarYRetirarCartaDeColeccion(stListaD *, stCarta *) | busca una carta por id, copia sus datos y su cantidad dentro de la colección la decrementa en 1, caso que cantidad llegue a 0 se borra la carta de la colección
bool IDsCartasCoinciden(stCarta, stCarta) | retorna true si ambas IDs coinciden
stListaD * borrarNodoDeColeccion(stListaD *, stCarta *) | se borra un nodo según la ID del segundo argumento, si se encuentra, se copian los datos del nodo al puntero de la carta 
void buscarCartasPorRareza(stListaD *, char[])
bool rarezasCartasCoinciden(char[], char[])
void buscarCartaPorID(stListaD *, int)

- Cambió:
- la estructura if - else if - else if por if - else if - else de las funciones agregaCartaANodoArbol y
buscaNodoConInicial.